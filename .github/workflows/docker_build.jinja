{{ wf.header }}
name: {{ wf.software }}

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

jobs:

  {{ wf.software }}:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        base_image: [{{ wf.os.all }}]
        {% if wf.add_version %}
        version: [{{ wf.versions }}]
        {% endif %}
        {% if wf.add_method %}
        method: [{{ wf.methods }}]
        {% endif %}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install neurodocker
        run: python -m pip install --editable .[dev]

      - name: Generate Dockerfile
        run: |

          apt_based=({{ wf.os.apt_based }})
          if [[ " ${apt_based[*]} " =~ ${{ '{{' }} matrix.base_image {{ '}}' }} ]]; then
            pkg_manager="apt"
          fi

          yum_based=({{ wf.os.yum_based }})
          if [[ " ${yum_based[*]} " =~ ${{ '{{' }} matrix.base_image {{ '}}' }} ]]; then
            pkg_manager="yum"
          fi

          neurodocker \
            generate docker \
            --base-image=${{ '{{' }} matrix.base_image {{ '}}' }} \
            --pkg-manager=${pkg_manager} \
            --yes \
            --{{ wf.software }} \
            {% if wf.add_version %}
            version=${{ '{{' }} matrix.version {{ '}}' }} \
            {% endif %}
            {% if wf.add_method %}
            method=${{ '{{' }} matrix.method {{ '}}' }} \
            {% endif %}
            > Dockerfile_tmp

          cat Dockerfile_tmp

      - name: Build the Docker image
        run: docker build -f Dockerfile_tmp .
